plugins {
  id 'java'
  id 'jacoco'
  id 'maven'

  // community plugins
  id 'com.github.ben-manes.versions' version '0.15.0'
  id 'com.diffplug.gradle.spotless' version '3.4.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

description = """Superunknown"""
version = '1.0'

repositories {
  mavenLocal()
  mavenCentral()
  maven { url "https://jitpack.io" }
}


dependencies {
  compile (
    'com.google.code.gson:gson:2.8.1',
    'ch.qos.logback:logback-classic:1.2.3',
    'ch.qos.logback:logback-core:1.2.3',
    'org.slf4j:slf4j-api:1.7.25',
    'org.glassfish.jersey.containers:jersey-container-netty-http:2.26-b06',
    'org.glassfish.jersey.inject:jersey-hk2:2.26-b06',
    'org.projectlombok:lombok:1.16.16',
  )

  testCompile(
    'junit:junit:4.12',
    'org.assertj:assertj-core:3.8.0',
    'org.mockito:mockito-all:2.0.2-beta'
  )

}

task wrapper(type: Wrapper) {
    gradleVersion = '4.0'
}

test {
  reports.html.enabled = true
  reports.junitXml.enabled = false
  jvmArgs "-XX:-UseSplitVerifier" // This option is to avoid a VerifyError regards cobertura instrumentation
}

jacocoTestReport {
  reports {
    xml.enabled false
    csv.enabled false
    html.enabled true
  }
}

javadoc {
  options {
    doclet = "com.visural.doclets.markdown.standard.Standard"
    docletpath = [
        rootProject.file('./resources/MarkdownDoclet-3.0.jar')
    ]
    // http://sensemaya.org/maya/2009/07/10/making-javadoc-more-legible
    stylesheetFile = rootProject.file('./resources/javadoc-stylesheet.css')
  }
}

spotless {
  java {
    importOrderFile rootProject.file('./resources/importorder')
    eclipseFormatFile rootProject.file('./resources/eclipseformat.xml')
  }
}
